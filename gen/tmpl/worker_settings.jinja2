from pydantic_settings import BaseSettings, SettingsConfigDict

from common.rabbitmq.rabbitmq_settings import RabbitSettings
from common.utils.paths import PROJECT_ROOT

from configuration.constants import ENV_PREFIX


class {{worker_name.split('_')|map('capitalize')|join}}Settings(BaseSettings):
    """Настройки приложения."""

    model_config = SettingsConfigDict(
        env_prefix=f"{ENV_PREFIX}{{ worker_name | upper }}_",
        env_file=PROJECT_ROOT.joinpath(".env"),
        env_file_encoding="utf-8",
    )

    queue_name: str = "replaceit"
    routing_key: str = "replaceit"
    exchange: str = "replaceit"
    is_queue_durable: bool = True
    is_exchange_durable: bool = True
    max_async_tasks: int = 30
    prefetch_count: int = 100
    # Rabbit
    rabbit: RabbitSettings = RabbitSettings()
    # Metrics
    metrics_host: str = "0.0.0.0"
    metrics_port: int = 9000
    # Health
    health_host: str = "localhost"
    health_port: int = 9001
    enable_health_check: bool = True
