from typing import Annotated

from loguru import logger
from taskiq import Context, TaskiqDepends

from common.logging.log_models import LogData
from common.taskiq.broker import rabbit_broker
from common.taskiq.decorators import taskiq_logging


@rabbit_broker.task
@taskiq_logging
async def place_task_name(
    *,
    context: Annotated[Context, TaskiqDepends()],
    log_data: LogData):
    """
    TODO:Поменять_описание.
    при генерации таски не забываем запустить taskiq worker:
    пример команды (
    taskiq worker common.taskiq.broker:rabbit_broker -fsd -tp task_*.py)

    :param context: параметры клиентов из taskiq.
    :param log_data: Проброшенные из вызова данные.
        Не удалять. Нужен для декоратора taskiq_logging.
        Передать можно через .kiq(log_data=request.app.state.log_data)
    """
    logger.info("place_task_name")
    logger.info(context.state.clients.configs)
